/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrambleeeess;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PrinterException;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emman
 */
public class thefinalscramble extends javax.swing.JFrame implements MouseListener {

    /**
     * Creates new form thefinalscramble
     */
    public thefinalscramble() {
        initComponents();
        
        pork.addMouseListener(this);
        chicken.addMouseListener(this);
        fried.addMouseListener(this);
        ube.addMouseListener(this);
        strawberry.addMouseListener(this);
        spag.addMouseListener(this);
        carbonara.addMouseListener(this);
        bakedmac.addMouseListener(this);
        vodkapasta.addMouseListener(this);
        halohalo.addMouseListener(this);
        lobsterpasta.addMouseListener(this);
        oreo.addMouseListener(this);
        blueberry.addMouseListener(this);
        mozzarella.addMouseListener(this);
        springrolls.addMouseListener(this);
        coke.addMouseListener(this);
        sprite.addMouseListener(this);
        pepsi.addMouseListener(this);
        orangejuice.addMouseListener(this);
        woter.addMouseListener(this);
        
        
        
        jTable1.setForeground(Color.WHITE);
        jTable1.setBackground(Color.BLACK);
        jTable1.setOpaque(false);
        jTable1.setFont(new Font("Serif", Font.BOLD,16));
        
        
    }
    
    DefaultTableModel model = new DefaultTableModel();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        chicken = new javax.swing.JLabel();
        pork = new javax.swing.JLabel();
        fried = new javax.swing.JLabel();
        springrolls = new javax.swing.JLabel();
        mozzarella = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ube = new javax.swing.JLabel();
        strawberry = new javax.swing.JLabel();
        halohalo = new javax.swing.JLabel();
        blueberry = new javax.swing.JLabel();
        oreo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        spag = new javax.swing.JLabel();
        carbonara = new javax.swing.JLabel();
        bakedmac = new javax.swing.JLabel();
        vodkapasta = new javax.swing.JLabel();
        lobsterpasta = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        sprite = new javax.swing.JLabel();
        pepsi = new javax.swing.JLabel();
        orangejuice = new javax.swing.JLabel();
        woter = new javax.swing.JLabel();
        coke = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtSub = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        print = new javax.swing.JButton();
        btnreceipt = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        rdtakeout = new javax.swing.JRadioButton();
        rddinein = new javax.swing.JRadioButton();
        exit = new javax.swing.JButton();
        txtpayment = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jlabelbg = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("sewrwqrqrqr");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jLabel1)
                .addContainerGap(222, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 739, -1));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        chicken.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\chicken siomai.jpg")); // NOI18N

        pork.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\pork-siomai.jpg")); // NOI18N

        fried.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\fried siomai.jpg")); // NOI18N

        springrolls.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\Spring rolls.jpg")); // NOI18N

        mozzarella.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\Mozzarella.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pork, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chicken, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fried, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mozzarella, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(springrolls, javax.swing.GroupLayout.PREFERRED_SIZE, 130, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pork, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(chicken, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(fried, javax.swing.GroupLayout.PREFERRED_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(mozzarella, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(springrolls, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("APPETIZER", jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ube.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\ube.jpg")); // NOI18N

        strawberry.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\starw.jpg")); // NOI18N

        halohalo.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\halohalo final.jpg")); // NOI18N

        blueberry.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\blueberry cheesecake.jpg")); // NOI18N

        oreo.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\oreo cheesecake.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(strawberry, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ube, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(halohalo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(oreo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blueberry, javax.swing.GroupLayout.PREFERRED_SIZE, 130, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(strawberry, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(ube, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(halohalo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(oreo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(blueberry, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("DESSERT", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        spag.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\spag.jpg")); // NOI18N

        carbonara.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\carbonara.jpg")); // NOI18N

        bakedmac.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\Baked macaroni.jpg")); // NOI18N

        vodkapasta.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\vodka sauce pasta.jpg")); // NOI18N

        lobsterpasta.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\lobster pasta.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spag, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(carbonara, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bakedmac, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vodkapasta, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lobsterpasta, javax.swing.GroupLayout.PREFERRED_SIZE, 130, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lobsterpasta, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bakedmac, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(spag, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(carbonara, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(vodkapasta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("PASTA", jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sprite.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\sprite.jpg")); // NOI18N

        pepsi.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\pepsi.jpg")); // NOI18N

        orangejuice.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\orange juice.jpg")); // NOI18N

        woter.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\water.jpg")); // NOI18N

        coke.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\coca-cola.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(coke, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(sprite, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(orangejuice, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(woter, javax.swing.GroupLayout.PREFERRED_SIZE, 130, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(coke, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(sprite, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(pepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(orangejuice, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(woter, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DRINKS", jPanel5);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 62, 719, 179));

        jTable1.setBackground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price", "Quantity", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 717, 68));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Subtotal:");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 352, -1, 31));

        txtSub.setEditable(false);
        txtSub.setBackground(new java.awt.Color(0, 0, 0));
        txtSub.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtSub.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtSub, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 341, 120, 47));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Reset");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 604, 89, 60));

        print.setBackground(new java.awt.Color(0, 0, 0));
        print.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        print.setForeground(new java.awt.Color(255, 255, 255));
        print.setText("Print ");
        print.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 526, 89, 60));

        btnreceipt.setBackground(new java.awt.Color(0, 0, 0));
        btnreceipt.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnreceipt.setForeground(new java.awt.Color(255, 255, 255));
        btnreceipt.setText("Generate Receipt");
        btnreceipt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnreceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreceiptActionPerformed(evt);
            }
        });
        getContentPane().add(btnreceipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 526, -1, 60));

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        area.setEditable(false);
        area.setColumns(5);
        area.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        area.setRows(10);
        jScrollPane2.setViewportView(area);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 341, -1, -1));

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));

        rdtakeout.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdtakeout.setForeground(new java.awt.Color(255, 255, 255));
        rdtakeout.setText("Take-Out");
        rdtakeout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdtakeoutActionPerformed(evt);
            }
        });

        rddinein.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rddinein.setForeground(new java.awt.Color(255, 255, 255));
        rddinein.setText("Dine-In");
        rddinein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rddineinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdtakeout)
                .addGap(18, 18, 18)
                .addComponent(rddinein, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdtakeout)
                    .addComponent(rddinein))
                .addGap(30, 30, 30))
        );

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 471, -1, 37));

        exit.setBackground(new java.awt.Color(0, 0, 0));
        exit.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("Exit");
        exit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 604, 89, 60));

        txtpayment.setBackground(new java.awt.Color(0, 0, 0));
        txtpayment.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtpayment.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtpayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 406, 120, 47));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Payment:");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 417, -1, 31));

        jlabelbg.setIcon(new javax.swing.ImageIcon("C:\\Users\\emman\\OneDrive - PAMBAYANG DALUBHASAAN NG MARILAO\\Pictures\\firstprojectresto\\greybg.jpg")); // NOI18N
        getContentPane().add(jlabelbg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 4, 740, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnreceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreceiptActionPerformed
        // TODO add your handling code here:
        int dt;
        
       
       int count = jTable1.getModel().getRowCount(); 
        
       if (count <= 0)
        {
            JOptionPane.showMessageDialog(this, "ORDER FIRST!", "GENERATE ERROR", JOptionPane.OK_OPTION);
        } 
       
       else if (txtpayment.getText().isEmpty())
       {
           JOptionPane.showMessageDialog(this, "PAYMENT FIRST!", "PAYMENT ERROR", JOptionPane.OK_OPTION);
       }
      
       else if (rddinein.isSelected()==false && rdtakeout.isSelected()== false)
       { //1
           dt = Integer.parseInt(JOptionPane.showInputDialog("[1]Take-Out\n[2]Dine-In"));
      
        //{
        if (dt == 2)
        { //2
              String sub = txtSub.getText();
        DecimalFormat dc = new DecimalFormat("0.00");
        
        final double tax = 0.05;
        
        int subtotalprice = Integer.parseInt(sub);
        
        double taxprice = tax * subtotalprice;
        
        
        String fomattedtext = dc.format(taxprice);
        
        double totalprice = taxprice + subtotalprice;
        
        String totalpriceformatted = dc.format(totalprice);
        
        double payment11 = Double.parseDouble(txtpayment.getText());
        String paymentformatted = dc.format(payment11);
        
        double change = payment11 - totalprice;
        String changeformatted = dc.format(change);
        
        if (payment11 < totalprice)
        {
            JOptionPane.showMessageDialog(this, "UNDERPAID!", "PAYMENT ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        else if (payment11 >= totalprice)
                {  //3
        int tableno = Integer.parseInt(JOptionPane.showInputDialog("Table no."));
        
        Date obj = new Date();
        
        String date = obj.toString();
        
        area.setText(area.getText() + "                      YAHCUHC RESTAURANT                     \n");
        area.setText(area.getText() + "          112, 2nd floor, Abangan Sur, Marilao, Bulacan      \n");
        area.setText(area.getText() + "\t\t  " + date + "\n");
        area.setText(area.getText() + "\t\t\t  Table No." + tableno + "\n\n\n");
        
        
        
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        area.setText(area.getText() + "Product" + "\t\t\t" + "Price" + "\t" + "Quantity" + "\t" + "Total" + "\n");
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        for (int i = 0; i < jTable1.getRowCount(); i++)
        {
            String product1 = jTable1.getValueAt(i,0).toString();
            String price1 = jTable1.getValueAt(i,1).toString();
            String quan1 = jTable1.getValueAt(i,2).toString();
            String tot1 = jTable1.getValueAt(i, 3).toString();
            
            area.setText(area.getText() + product1 + "\t\t" + price1 + "\t" + quan1 + "\t\t" + tot1 + "\n"); 
        }
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        
        
        area.setText(area.getText() + "SUBTOTAL\t\t\t:\t\t\t" + sub + "\n");
       
      
        
        
         
        area.setText(area.getText() + "TAX\t\t\t:\t\t\t" + fomattedtext + "\n");
        area.setText(area.getText() + "TOTAL\t\t\t:\t\t\t" + totalpriceformatted + "\n");
        area.setText(area.getText() + "PAYMENT\t\t\t:\t\t\t" + paymentformatted + "\n");
        area.setText(area.getText() + "CHANGE\t\t\t:\t\t\t" + changeformatted + "\n");
        area.setText(area.getText() + "\n*************************************************************\n");
        area.setText(area.getText() + "\t\t\t   THANK YOU\n");
        area.setText(area.getText() + "*************************************************************\n");
        }
        }
        
        else if (dt == 1)
                { //1
                                  String sub = txtSub.getText();
        DecimalFormat dc = new DecimalFormat("0.00");
        
        final double tax = 0.05;
        
        int subtotalprice = Integer.parseInt(sub);
        
        double taxprice = tax * subtotalprice;
        
        
        String fomattedtext = dc.format(taxprice);
        
        double totalprice = taxprice + subtotalprice;
        
        String totalpriceformatted = dc.format(totalprice);
        
        double payment11 = Double.parseDouble(txtpayment.getText());
        String paymentformatted = dc.format(payment11);
        
        double change = payment11 - totalprice;
        String changeformatted = dc.format(change);
        
        if (payment11 < totalprice)
        {
            JOptionPane.showMessageDialog(this, "UNDERPAID!", "PAYMENT ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        else if (payment11 >= totalprice)
        { //2
        Date obj = new Date();
        
        String date = obj.toString();
        
        area.setText(area.getText() + "                      YAHCUHC RESTAURANT                     \n");
        area.setText(area.getText() + "          112, 2nd floor, Abangan Sur, Marilao, Bulacan      \n");
        area.setText(area.getText() + "\t\t  " + date + "\n");
        area.setText(area.getText() + "\t\t\t  Take-Out\n\n\n");
        
        
        
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        area.setText(area.getText() + "Product" + "\t\t\t" + "Price" + "\t" + "Quantity" + "\t" + "Total" + "\n");
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        for (int i = 0; i < jTable1.getRowCount(); i++)
        {
            String product1 = jTable1.getValueAt(i,0).toString();
            String price1 = jTable1.getValueAt(i,1).toString();
            String quan1 = jTable1.getValueAt(i,2).toString();
            String tot1 = jTable1.getValueAt(i, 3).toString();
            
            area.setText(area.getText() + product1 + "\t\t" + price1 + "\t" + quan1 + "\t\t" + tot1 + "\n"); 
        }
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        
        area.setText(area.getText() + "SUBTOTAL\t\t\t:\t\t\t" + sub + "\n");
        
      
        
        
        area.setText(area.getText() + "TAX\t\t\t:\t\t\t" + fomattedtext + "\n");
        area.setText(area.getText() + "TOTAL\t\t\t:\t\t\t" + totalpriceformatted + "\n");
        area.setText(area.getText() + "PAYMENT\t\t\t:\t\t\t" + paymentformatted + "\n");
        area.setText(area.getText() + "CHANGE\t\t\t:\t\t\t" + changeformatted + "\n");
        area.setText(area.getText() + "\n*************************************************************\n");
        area.setText(area.getText() + "\t\t\t   THANK YOU\n");
        area.setText(area.getText() + "*************************************************************\n");
                }
        }
       }
       
       
       else if (rddinein.isSelected()==true || rdtakeout.isSelected()==true)
       { //first bracket in radio button
           if (rddinein.isSelected()==true)
           {  //first bracket in dine in          
               String sub = txtSub.getText();
           
        DecimalFormat dc = new DecimalFormat("0.00");
        
        final double tax = 0.05;
        
        int subtotalprice = Integer.parseInt(sub);
        
        double taxprice = tax * subtotalprice;
        
        
        String fomattedtext = dc.format(taxprice);
        
        double totalprice = taxprice + subtotalprice;
        
        String totalpriceformatted = dc.format(totalprice);
        
        double payment11 = Double.parseDouble(txtpayment.getText());
        String paymentformatted = dc.format(payment11);
        
        double change = payment11 - totalprice;
        String changeformatted = dc.format(change);
        
        if (payment11 < totalprice)
        {
            JOptionPane.showMessageDialog(this, "UNDERPAID!", "PAYMENT ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        else if (payment11 >= totalprice)
        { // normal
               int tableno = Integer.parseInt(JOptionPane.showInputDialog("Table no."));
        
        Date obj = new Date();
        
        String date = obj.toString();
        
        area.setText(area.getText() + "                      YAHCUHC RESTAURANT                     \n");
        area.setText(area.getText() + "          112, 2nd floor, Abangan Sur, Marilao, Bulacan      \n");
        area.setText(area.getText() + "\t\t  " + date + "\n");
        area.setText(area.getText() + "\t\t\t  Table No." + tableno + "\n\n\n");
        
        
        
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        area.setText(area.getText() + "Product" + "\t\t\t" + "Price" + "\t" + "Quantity" + "\t" + "Total" + "\n");
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        for (int i = 0; i < jTable1.getRowCount(); i++)
        {
            String product1 = jTable1.getValueAt(i,0).toString();
            String price1 = jTable1.getValueAt(i,1).toString();
            String quan1 = jTable1.getValueAt(i,2).toString();
            String tot1 = jTable1.getValueAt(i, 3).toString();
            
            area.setText(area.getText() + product1 + "\t\t" + price1 + "\t" + quan1 + "\t\t" + tot1 + "\n"); 
        }
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        
        
        area.setText(area.getText() + "SUBTOTAL\t\t\t:\t\t\t" + sub + "\n");
        
 
        
       
        
        
        area.setText(area.getText() + "TAX\t\t\t:\t\t\t" + fomattedtext + "\n");
        area.setText(area.getText() + "TOTAL\t\t\t:\t\t\t" + totalpriceformatted + "\n");
        area.setText(area.getText() + "PAYMENT\t\t\t:\t\t\t" + paymentformatted + "\n");
        area.setText(area.getText() + "CHANGE\t\t\t:\t\t\t" + changeformatted + "\n");
        area.setText(area.getText() + "\n*************************************************************\n");
        area.setText(area.getText() + "\t\t\t   THANK YOU\n");
        area.setText(area.getText() + "*************************************************************\n");
        }
     }
           
           else if (rdtakeout.isSelected()==true)
          { // first bracket in take out
               String sub = txtSub.getText();
           
        DecimalFormat dc = new DecimalFormat("0.00");
        
        final double tax = 0.05;
        
        int subtotalprice = Integer.parseInt(sub);
        
        double taxprice = tax * subtotalprice;
        
        
        String fomattedtext = dc.format(taxprice);
        
        double totalprice = taxprice + subtotalprice;
        
        String totalpriceformatted = dc.format(totalprice);
        
        double payment11 = Double.parseDouble(txtpayment.getText());
        String paymentformatted = dc.format(payment11);
        
        double change = payment11 - totalprice;
        String changeformatted = dc.format(change);
        
        if (payment11 < totalprice)
        {
            JOptionPane.showMessageDialog(this, "UNDERPAID!", "PAYMENT ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        else if (payment11 >= totalprice)
        {     //normal price
           
               Date obj = new Date();
        
        String date = obj.toString();
        
        area.setText(area.getText() + "                      YAHCUHC RESTAURANT                     \n");
        area.setText(area.getText() + "          112, 2nd floor, Abangan Sur, Marilao, Bulacan      \n");
        area.setText(area.getText() + "\t\t  " + date + "\n");
        area.setText(area.getText() + "\t\t\t  Take-Out\n\n\n");
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        area.setText(area.getText() + "Product" + "\t\t\t" + "Price" + "\t" + "Quantity" + "\t" + "Total" + "\n");
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        for (int i = 0; i < jTable1.getRowCount(); i++)
        {
            String product1 = jTable1.getValueAt(i,0).toString();
            String price1 = jTable1.getValueAt(i,1).toString();
            String quan1 = jTable1.getValueAt(i,2).toString();
            String tot1 = jTable1.getValueAt(i, 3).toString();
            
            area.setText(area.getText() + product1 + "\t\t" + price1 + "\t" + quan1 + "\t\t" + tot1 + "\n"); 
        }
        area.setText(area.getText() + "-------------------------------------------------------------\n");
        
        
        area.setText(area.getText() + "SUBTOTAL\t\t\t:\t\t\t" + sub + "\n");
        
       
        
        
        area.setText(area.getText() + "TAX\t\t\t:\t\t\t" + fomattedtext + "\n");
        area.setText(area.getText() + "TOTAL\t\t\t:\t\t\t" + totalpriceformatted + "\n");
        area.setText(area.getText() + "PAYMENT\t\t\t:\t\t\t" + paymentformatted + "\n");
        area.setText(area.getText() + "CHANGE\t\t\t:\t\t\t" + changeformatted + "\n");
        area.setText(area.getText() + "\n*************************************************************\n");
        area.setText(area.getText() + "\t\t\t   THANK YOU\n");
        area.setText(area.getText() + "*************************************************************\n");
           }   
          }
       }
    }//GEN-LAST:event_btnreceiptActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        txtSub.setText("");
        area.setText("");
        txtpayment.setText("");
         
        DefaultTableModel tMOdel = (DefaultTableModel) jTable1.getModel();
         tMOdel.setRowCount(0);
         rddinein.setSelected(false);
         rdtakeout.setSelected(false);
          
    }//GEN-LAST:event_jButton1ActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        if (area.getText().isEmpty())
        {
            
      
           JOptionPane.showMessageDialog(this, "ORDER FIRST!", "PRINTING ERROR", JOptionPane.ERROR_MESSAGE);
            
           
           
        }
        
        else
                {
        try
        {
            area.print();
        } catch (PrinterException ex) {
            Logger.getLogger(thefinalscramble.class.getName()).log(Level.SEVERE, null, ex);
        }
                }
    }//GEN-LAST:event_printActionPerformed

    private void rdtakeoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdtakeoutActionPerformed
        // TODO add your handling code here:
        if (rdtakeout.isSelected()==true)
        {
            rddinein.setSelected(false);
        }         
    }//GEN-LAST:event_rdtakeoutActionPerformed

    private void rddineinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rddineinActionPerformed
        // TODO add your handling code here:
        if (rddinein.isSelected()==true)
        {
            rdtakeout.setSelected(false);
        }
    }//GEN-LAST:event_rddineinActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        
         int dialogbtn = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Exiting YAHCUHC", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
         if (dialogbtn == JOptionPane.YES_OPTION)
         { 
          System.exit(0);
         }
         
         else
         {
           remove(dialogbtn);
         }
        
        
        
    }//GEN-LAST:event_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(thefinalscramble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(thefinalscramble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(thefinalscramble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(thefinalscramble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new thefinalscramble().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JLabel bakedmac;
    private javax.swing.JLabel blueberry;
    private javax.swing.JButton btnreceipt;
    private javax.swing.JLabel carbonara;
    private javax.swing.JLabel chicken;
    private javax.swing.JLabel coke;
    private javax.swing.JButton exit;
    private javax.swing.JLabel fried;
    private javax.swing.JLabel halohalo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jlabelbg;
    private javax.swing.JLabel lobsterpasta;
    private javax.swing.JLabel mozzarella;
    private javax.swing.JLabel orangejuice;
    private javax.swing.JLabel oreo;
    private javax.swing.JLabel pepsi;
    private javax.swing.JLabel pork;
    private javax.swing.JButton print;
    private javax.swing.JRadioButton rddinein;
    private javax.swing.JRadioButton rdtakeout;
    private javax.swing.JLabel spag;
    private javax.swing.JLabel springrolls;
    private javax.swing.JLabel sprite;
    private javax.swing.JLabel strawberry;
    private javax.swing.JTextField txtSub;
    private javax.swing.JTextField txtpayment;
    private javax.swing.JLabel ube;
    private javax.swing.JLabel vodkapasta;
    private javax.swing.JLabel woter;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
         
        if (e.getSource() == pork)
        {
            String name = "Pork Siomai";
            int price = 20;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
        else if (e.getSource() == chicken)
        {
            String name = "Chicken Siomai";
            int price = 20;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
         else if (e.getSource() == fried)
        {
            String name = "Fried Siomai";
            int price = 20;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
         else if (e.getSource() == strawberry)
        {
            String name = "SB Scramble";
            int price = 25;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
         else if (e.getSource() == ube)
        {
            String name = "Ube Scramble";
            int price = 25;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
        else if (e.getSource() == spag)
        {
            String name = "Spaghetti";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
        else if (e.getSource() == carbonara)
        {
            String name = "Carbonara";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
        else if (e.getSource() == bakedmac)
        {
            String name = "Baked Macaroni";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
        else if (e.getSource() == vodkapasta)
        {
            String name = "Vodka Pasta";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
          else if (e.getSource() == halohalo)
        {
            String name = "Halo-Halo";
            int price = 70;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
           else if (e.getSource() == lobsterpasta)
        {
            String name = "Lobster Pasta";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
            else if (e.getSource() == oreo)
        {
            String name = "Oreo Cheesecake";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
                   else if (e.getSource() == blueberry)
        {
            String name = "B-Cheesecake";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
                else if (e.getSource() == mozzarella)
        {
            String name = "Mozzarella";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
          else if (e.getSource() == springrolls)
        {
            String name = "Spring Rolls";
            int price = 99;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
         else if (e.getSource() == coke)
        {
            String name = "Coca-Cola";
            int price = 25;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
         else if (e.getSource() == sprite)
        {
            String name = "Sprite-Cola";
            int price = 25;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
         else if (e.getSource() == pepsi)
        {
            String name = "Pepsi-Cola";
            int price = 25;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
         else if (e.getSource() == orangejuice)
        {
            String name = "Orange Juice";
            int price = 25;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
        
         else if (e.getSource() == woter)
        {
            String name = "Special Water";
            int price = 25;
            
            int qty = Integer.parseInt(JOptionPane.showInputDialog("Enter the quantity"));
            
            int tot = price * qty;
            
            model = (DefaultTableModel)jTable1.getModel();
             
            model.addRow(new Object[]
            { 
                    name,
                    price,
                    qty,
                    tot,    
            } );
            
            int sum = 0;
            
            for (int i = 0; i < jTable1.getRowCount(); i++)
            {
                sum = sum + Integer.parseInt(jTable1.getValueAt(i,3).toString());            
            }
            txtSub.setText(Integer.toString(sum));
            
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
       
    }

    @Override
    public void mouseReleased(MouseEvent e) {
       
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
    }
}
